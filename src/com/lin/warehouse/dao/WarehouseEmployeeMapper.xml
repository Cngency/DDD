<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lin.warehouse.dao.WarehouseEmployeeMapper">

	<resultMap type="com.lin.warehouse.domain.WarehouseEmployee"
		id="warehouseEmployeeMap">
		<id property="id" column="employeeId" />
		<result property="name" column="employeeName" />
		<result property="tel" column="tel" />
		<result property="address" column="address" />
		<result property="code" column="employeeCode" /> 

		<association property="warehouse" javaType="com.lin.warehouse.domain.Warehouse">
			<id property="id" column="warehouseId" />
			<result property="code" column="warehouseCode" />
			<result property="capacity" column="capacity" />
			<result property="location" column="location" />
			<result property="longitude" column="longitude" />
			<result property="latitude" column="latitude" />
		</association>

	</resultMap>

	<insert id="create" parameterType="com.lin.warehouse.domain.WarehouseEmployee">
		insert into
		WarehouseEmployee(name,tel,address,code,warehouse_id)values(#{name},#{tel},#{address},#{code},#{warehouse.id})
	</insert>

	<select id="read" parameterType="int" resultMap="warehouseEmployeeMap">
		select
			WarehouseEmployee.id employeeId,
			WarehouseEmployee.name employeeName,
			WarehouseEmployee.tel,
			WarehouseEmployee.address,
			WarehouseEmployee.code employeeCode,
			Warehouse.id warehouseId,
			Warehouse.code warehouseCode,
			Warehouse.capacity,
			Warehouse.location,
			Warehouse.longitude,
			Warehouse.latitude
		from WarehouseEmployee
			left outer join Warehouse on Warehouse.id=WarehouseEmployee.warehouse_id
		where Warehouse.id=#{id}
	</select>
	
	<select id="readByCode" parameterType="java.util.Map" resultMap="warehouseEmployeeMap">
		select 
			WarehouseEmployee.id employeeId,
			WarehouseEmployee.name employeeName,
			WarehouseEmployee.tel,
			WarehouseEmployee.address,
			WarehouseEmployee.code employeeCode,
			Warehouse.id warehouseId,
			Warehouse.code warehouseCode,
			Warehouse.capacity,
			Warehouse.location,
			Warehouse.longitude,
			Warehouse.latitude
from WarehouseEmployee left outer join Warehouse on Warehouse.id=WarehouseEmployee.warehouse_id where WarehouseEmployee.code=#{code}
	</select>

	<select id="readAll" resultMap="warehouseEmployeeMap">
		select
			WarehouseEmployee.id employeeId,
			WarehouseEmployee.name employeeName,
			WarehouseEmployee.tel,
			WarehouseEmployee.address,
			WarehouseEmployee.code employeeCode
			Warehouse.id warehouseId,
			Warehouse.code warehouseCode,
			Warehouse.capacity,
			Warehouse.location,
			Warehouse.longitude,
			Warehouse.latitude
		from WarehouseEmployee
			left outer join Warehouse on Warehouse.id=WarehouseEmployee.warehouse_id
	</select>

	<update id="update" parameterType="com.lin.warehouse.domain.WarehouseEmployee">
		update WarehouseEmployee set
		name=#{name},tel=#{tel},address=#{address},code=#{code} where id=#{id}
	</update>

	<delete id="delete" parameterType="int">
		delete from WarehouseEmployee
		where
		id=#{id}
	</delete>

	<select id="count" resultType="int">
		select count(*) from
		WarehouseEmployee
	</select>

</mapper>